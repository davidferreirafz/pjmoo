#include "Cenario.h"

Cenario::Cenario()
{
    int mapa[300]={
     6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,
     6,1,3,2,0,0,0,1,2,0,3,0,0,0,1,2,0,0,0,6,
     6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,6,
     6,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,6,
     6,0,0,0,1,3,2,0,0,0,0,0,0,0,0,0,0,0,0,6,
     6,0,0,1,3,3,3,2,0,0,0,1,3,2,0,1,2,0,0,6,
     6,5,4,2,0,0,1,3,2,0,0,0,0,0,0,0,0,0,0,6,
     6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,
     6,0,0,0,0,0,0,1,3,3,3,3,3,3,3,3,0,0,0,6,
     6,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,6,
     6,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,6,
     6,0,0,0,0,0,0,0,0,0,1,3,2,0,0,0,1,4,7,6,
     6,0,0,0,0,0,1,2,0,0,0,4,0,0,0,1,4,7,6,6,
     6,0,0,6,0,0,0,0,0,0,0,3,0,0,1,4,7,6,7,6,
     6,3,3,3,3,3,3,3,3,3,3,3,3,3,5,6,6,7,7,6
    };

/*
    0 - livre
    1 - solido - colisao
    2 - escada
*/
    int mapaColisao[300]={
     1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
     1,1,1,1,0,0,0,1,1,0,1,0,0,0,1,1,0,0,0,1,
     1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,
     1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
     1,0,0,0,2,1,2,0,0,0,0,0,0,0,0,0,0,0,0,1,
     1,0,0,2,1,1,1,2,0,0,0,1,1,1,0,1,1,0,0,1,
     1,1,1,1,0,0,1,1,2,0,0,0,0,0,0,0,0,0,0,1,
     1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
     1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,1,
     1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,
     1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,1,
     1,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,2,1,1,1,
     1,0,0,0,0,0,1,1,0,0,0,1,0,0,0,2,1,1,1,1,
     1,0,0,1,0,0,0,0,0,0,0,1,0,0,2,1,1,1,1,1,
     1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
    };

    GBF::Imagem::SpriteFactory * spriteFactory = NULL;
    spriteFactory = new GBF::Imagem::SpriteFactory("tiles");

    layer = spriteFactory->criarFrameLayer(0, 0,32,32);
    layer->setFrame(0,0,640,480);
    layer->setTiles(20,15);
    layer->setPixelTile(32,32);
    layer->carregarMapaMemoria(mapa);
    layer->carregarColisaoMemoria(mapaColisao);


    delete(spriteFactory);
}

Cenario::~Cenario()
{
    delete(layer);
}

void Cenario::carregarColisaoMemoria(int * vetor)
{
    mapaColisao = vetor;
}

void Cenario::desenhar()
{
    layer->desenhar();
}

void Cenario::executar(PersonagemAdventure * personagem)
{
   Colisao::cenario(personagem,layer);
}

