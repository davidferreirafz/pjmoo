class Jogador
!!!132244.cpp!!!	Jogador()

    GraphicSystemImageBufferManager *gsImageBufferManager=GraphicSystemImageBufferManager::getInstance();
    SpriteFactory *spriteFactory = new SpriteFactory(gsImageBufferManager->getImageBuffer("personagem"));
    adicionarSpritePrincipal(spriteFactory->criarSpritePersonagem(0,21,14,80,1,1));
    delete(spriteFactory);
!!!132372.cpp!!!	~Jogador()

    //dtor
!!!132500.cpp!!!	iniciar() : void
    adaptarVelocidade();
    setPosicao(getAreaTela().right-getDimensao().w,(getAreaTela().bottom/2)-(getDimensao().h/2));
!!!132628.cpp!!!	acao(inout input : InputSystem) : void
	/*if ((input->teclado->isKey(SDLK_UP))||(input->joystick->isAxeUp())){
        subir();
    } else if ((input->teclado->isKey(SDLK_DOWN))||(input->joystick->isAxeDown())){
        descer();
    }*/

    Area areaVisaoBola = IA::converter(getVisaoBola().getDimensao(),getVisaoBola().getPosicao());
	Area visao         = IA::converter(getDimensao(),getPosicao());

    Decisao decisao = IA::pensar(visao,areaVisaoBola,380,EFEITO_SEM);

    if (decisao==DECISAO_SUBIR){
        subir();
    } else if (decisao==DECISAO_DESCER){
        descer();
    }
!!!132756.cpp!!!	isColisao(inout personagem : PersonagemAbstract) : bool
    if ((personagem->getPosicao().x+personagem->getDimensao().w >= posicao.x)&&
        (posicao.y + getDimensao().h >= personagem->getPosicao().y)&&
        (posicao.y <= personagem->getPosicao().y + personagem->getDimensao().h)){
            return true;
    } else {
        return false;
    }
!!!132884.cpp!!!	saque() : Ponto
    Ponto saque;

    saque.x=posicao.x-getVisaoBola().getDimensao().w;
    saque.y=posicao.y+rand()%(getDimensao().h-getVisaoBola().getDimensao().h);

    return saque;
