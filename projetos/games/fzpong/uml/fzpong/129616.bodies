class WriteSystemManager
!!!190288.cpp!!!	~WriteSystemManager()
    UtilLog::subSistema("Removendo WriteSystemManager");
    std::map<std::string,WriteSystemBitmap*>::iterator it;

    for (it=objetomap.begin();it!=objetomap.end(); it++){
        try {
            UtilLog::tracer("Fonte=%s",((*it).first).c_str());
        } catch(...){
            UtilLog::tracer("Fonte=Desconhecido(a)");
        }
        delete((*it).second);
        (*it).second=NULL;
        UtilLog::comentario("[Ok]");
    }
    objetomap.clear();
!!!190416.cpp!!!	getFonte(in nome : std::string = "console") : WriteSystemBitmap
   if (objetomap.find(nome)!=objetomap.end()){
      return objetomap[nome];
   } else {
      return objetomap["console"];
      //DAFs gerar log de erro
   }
!!!190544.cpp!!!	getInstance() : WriteSystemManager
    if (instance == NULL){
        instance = new WriteSystemManager();
    }
    return instance;
!!!190672.cpp!!!	carregar(in nome : std::string, in arquivo : std::string) : void
    WriteSystemBitmap *f = new WriteSystemBitmap();

    UtilLog::tracer("FonteBitmap=%s Arquivo=%s",nome.c_str(),arquivo.c_str());
    if (f->carregarArquivo(arquivo)){
        objetomap[nome]=f;
        UtilLog::comentario("[Ok]");
    } else {
        UtilLog::comentario("[Falhou]");
    }
!!!190800.cpp!!!	escrever(in fonte : std::string, in x : int, in y : int, in texto : char) : void
    char texto_aux[256];
    va_list ap;

    va_start(ap, texto);
    vsprintf(texto_aux, texto, ap);
    va_end(ap);

    getFonte(fonte)->escrever(texto_aux,x,y);
!!!192336.cpp!!!	escreverLocalizado(in fonte : std::string, in x : int, in y : int, in chave : std::string) : void
    char textoFormatado[256];
    va_list ap;

    va_start(ap, chave);
    vsprintf(textoFormatado, uiTexto->getTexto(chave).c_str(), ap);
    va_end(ap);

    escrever(fonte,x,y,textoFormatado);
!!!192848.cpp!!!	escreverLocalizadoSubChave(in fonte : std::string, in x : int, in y : int, in chave : std::string, in subChave : std::string) : void
    char textoFormatado[256];

    sprintf(textoFormatado, uiTexto->getTexto(chave).c_str(), uiTexto->getTexto(subChave).c_str());
    escrever(fonte,x,y,textoFormatado);
!!!190928.cpp!!!	apagar(in nome : std::string) : void
    if (objetomap[nome]){
        delete (objetomap[nome]);
        objetomap[nome]=NULL;
        objetomap.erase(nome);
    }
!!!191056.cpp!!!	WriteSystemManager()
    UtilLog::subSistema("Instanciando WriteSystemManager");
    uiTexto = UserInterfaceTexto::getInstance();
