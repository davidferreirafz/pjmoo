class UserInterfaceTexto
!!!192464.cpp!!!	setIdioma(in codigo : std::string) : bool
    bool achou = false;
    UtilLog::tracer("UserInterfaceTexto::setIdioma(%s)",codigo.c_str());

    if ((!codigo.empty())&&(idiomaSuportado.find(codigo)!=idiomaSuportado.end())){
        idiomaPrefixo=idiomaSuportado[codigo];
        achou=true;
    }

    if ((achou)&&(!arquivo.empty())){
        atualizar();      
    }
    
    return achou;
!!!192592.cpp!!!	getIdioma() : std::string
    return idiomaPrefixo;
!!!192720.cpp!!!	detectarIdioma() : void
#ifdef GNU_LINUX
//Descobrindo o idioma do usuário no GNU/LINUX
    const char* idioma    = getenv("LC_ALL");
    const char* idiomaAux = getenv("LANG");

    if (idioma==NULL){
        if (idiomaAux==NULL){
            setIdioma("DEFAULT");
        } else {
            if (!setIdioma(idiomaAux)){
                setIdioma("DEFAULT");
            }
        }
    } else {
        if (!setIdioma(idioma)){
            setIdioma("DEFAULT");
        }
    }
#else
//Descobrindo o idioma do usuário no MS-Windows(r)
    char idioma[6];
    int id = GetUserDefaultLangID();
    sprintf(idioma,"%d",id & 0x3ff);
    
    if (!setIdioma(idioma)){
        setIdioma("DEFAULT");
    }
#endif
!!!191312.cpp!!!	~UserInterfaceTexto()
    UtilLog::sistema("Removendo UserInterfaceTexto");
!!!191440.cpp!!!	atualizar() : bool
    char str[256];
    bool retorno = false;
    std::string fullpath=pathBase+"mensagem//"+getIdioma()+"."+arquivo;
    
    if (!arquivo.empty()){
        std::fstream arquivoTexto(fullpath.c_str(),std::ios::in);
    
        UtilLog::tracer("UserInterfaceTexto Carregando Idioma(%s)=%s",getIdioma().c_str(),fullpath.c_str());
        if (arquivoTexto!=NULL){
            while(!arquivoTexto.eof()){
                arquivoTexto.getline(str,256);
                parser(str);
            }
            arquivoTexto.close();
            retorno = true;
        }   
    }
    if (retorno){
        UtilLog::comentario("[Ok]");
    } else {
        UtilLog::comentario("[Falhou]");
    }      
    return retorno;
!!!193232.cpp!!!	setArquivo(in arquivo : std::string) : void
   this->arquivo=arquivo;
!!!191824.cpp!!!	size() : int
    return mapaTexto.size();
!!!192080.cpp!!!	getInstance() : UserInterfaceTexto
    if (instance == NULL){
        instance = new UserInterfaceTexto();
    }

    return instance;
!!!191568.cpp!!!	getTexto(in chave : std::string) : std::string
    if (mapaTexto.find(chave)!=mapaTexto.end()){
        return mapaTexto[chave];
    } else {
        return "ERRO";
    }
!!!192208.cpp!!!	setPathBase(inout path : std::string) : void
    pathBase=path+"data//etc//";
!!!191696.cpp!!!	parser(inout info : char) : void
    int i = 0;
    std::string linha = info;
    int tamanho = linha.length();

    for (i=0;i<tamanho;i++){
        if (linha[0]=='#'){
            break;
        } else if (linha[i]=='=') {
            break;
        }
    }
    if ((i>0)&&((i+1)<tamanho)){
        mapaTexto[linha.substr(0,i)]=linha.substr(i+1,tamanho);
    }
!!!193360.cpp!!!	carregarIdioma() : void
    char str[256];
    std::string fullpath=pathBase+"idioma.cfg";
    if (arquivo.empty()){
        std::fstream arquivoTexto(fullpath.c_str(),std::ios::in);
        UtilLog::tracer("Carregando Configuração de Idiomas=%s",fullpath.c_str());
        if (arquivoTexto!=NULL){
            while(!arquivoTexto.eof()){
                arquivoTexto.getline(str,256);
                parserIdioma(str);
            }
            arquivoTexto.close();
        }
    }
!!!193488.cpp!!!	parserIdioma(inout info : char) : void
    int i = 0;
    std::string linha = info;
    int tamanho = linha.length();

    for (i=0;i<tamanho;i++){
        if (linha[0]=='#'){
            break;
        } else if (linha[i]=='=') {
            break;
        }
    }
    if ((i>0)&&((i+1)<tamanho)){
        idiomaSuportado[linha.substr(0,i)]=linha.substr(i+1,tamanho);
        UtilLog::tracer("IdiomaSuportado[%s]=%s",linha.substr(0,i).c_str(),linha.substr(i+1,tamanho).c_str());
    }
!!!191184.cpp!!!	UserInterfaceTexto()
    UtilLog::subSistema("Instanciando UserInterfaceTexto");
    carregarIdioma();
